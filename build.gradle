plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.3'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'war'

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.32'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'commons-io:commons-io:2.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.hibernate:hibernate-core'
    implementation 'org.hibernate:hibernate-entitymanager'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.apache.tika:tika-core:2.0.0'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.liquibase:liquibase-core:4.4.3'
    implementation 'org.liquibase:liquibase-gradle-plugin:2.0.4'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'c3p0:c3p0:0.9.1.2'

//    Spring AOP + AspectJ
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.7'
    implementation 'aspectj:aspectjrt:1.5.3'
    implementation 'org.springframework:spring-aop:5.3.9'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.4.3'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
